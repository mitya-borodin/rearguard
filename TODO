Осознание того, что было сделано:
  ☐ Проработка архитектуры получения конфигураций. @started(18-11-19 11:45)
  ☐ Реализовать встроенные модули как независимые программы. @started(18-11-19 11:45)
  ☐ Приведение внутреннего устройства к принципам SOLID. @started(18-11-19 11:45)

Обслуживание монорепозитория:
  ☐ Задействовать имеющиеся компоненты для реализации функций монорепозитория.
    ☐ init
    ☐ install
    ☐ lint
    ☐ build
    ☐ link
    ☐ test
    ☐ publish [ --patch | --minor | --major  ]
    ☐ clean
    ☐ bootstrap (install, lint, test, build)

Функциональные улучшения:
  ☐ Реализовать метод init, который будет подкладывать необходимые файлы в проект;
  ☐ Реализовать флаг --force для метода init, который просто перезапишет все мета файлы в проекте;
  ☐ Проверка, установлены ли необходимые зависимости из списка sync_npm_deps;
  ☐ Проверка на циркулярные зависимости (utils depend on isomorphis, isomorphic depend on utils);
  ✔ typescript, tslint - конфигурации не настраиваются @done(18-11-19 11:45)

  Разработка (library, dynamic library bundle):
    ☐ При иземенении в зависимых (глобально слинкованных) модулях, директорий: lib, lib_bundle, dll_bundle необходимо: 0) cкопировать линкованный модуль в локальный node_modules 1) скопировать в проект dll_bundle, lib_bundle из локального node_modules 2) обновить index.html 3) Перезагрузить браузер.
    ☐ Пункты 2 и 3 могут быть заменены на запуск тестов.

  Разработка (front-end):
    ☐ При иземенении в зависимых (глобально слинкованных) модулях, директорий: (dll_bundle, lib_bundle, lib) необходимо: 0) cкопировать линкованный модуль в локальный node_modules 1) скопировать из локального node_modules (dll || lib)_bundle файлы в проект 2) обновить index.html 3) Перезагрузить браузер.

  Разработка (back-end, library for node):
    ☐ При иземенении в зависимых (глобально слинкованных) модулях, директории: lib необходимо: 0) cкопировать линкованный модуль в локальный node_modules 1) перезапустить процесс;

  Тестирование (library, library for node):
    ☐ Инкапсулировать инструменты тестирования в rearguard, снаружи просто запускаются тестовые файлы и все.
    ☐ Добавить настройки где можно указать директории с тестовыми файлами для nodejs или browser окружения, либо для того и другого окружения, гонять тесты два раза.
    ☐ Тестирование library for node проводить в nodejs среде.
    ☐ Тестирование library проводить как в nodejs так и браузерной среде в зависимости от реализации.

  Сборка bundle (dll):

  Сборка bundle (library):
    ☐ Сихронизировывать директории dll_bundle, lib_bundle;

  Сборка dynamic library bundle:
    ☐ Сихронизировывать директории dll_bundle, lib_bundle;
    ☐ Добавить настройки для реализации данного типа сборки, это тоже самое, что и (dll, library) только 1) генерируется ts файл с путями для загрузки 2) не подключается в index.html;

  Сборка library for node:
    ✔ Ослабить настройки поумолчанию для данного типа; @done(18-11-19 10:37)
    ☐ Сихронизировать только директорию lib;
